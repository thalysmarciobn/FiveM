// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseConsole.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230208120641_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Models.Database.AccountCharacterModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Id", "AccountId");

                    b.ToTable("account_character");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountId = 1L,
                            Armor = 0,
                            DateCreated = new DateTime(2023, 2, 8, 9, 6, 40, 774, DateTimeKind.Local).AddTicks(9250),
                            Gender = 0,
                            Model = "mp_m_freemode_01",
                            Name = "Admin",
                            Surname = "Thalys"
                        });
                });

            modelBuilder.Entity("Models.Database.AccountCharacterPositionModel", b =>
                {
                    b.Property<long>("ChatacterId")
                        .HasColumnType("bigint");

                    b.Property<float>("X")
                        .HasColumnType("float");

                    b.Property<float>("Y")
                        .HasColumnType("float");

                    b.Property<float>("Z")
                        .HasColumnType("float");

                    b.HasKey("ChatacterId");

                    b.ToTable("account_character_position");

                    b.HasData(
                        new
                        {
                            ChatacterId = 1L,
                            X = 0f,
                            Y = 0f,
                            Z = 0f
                        });
                });

            modelBuilder.Entity("Models.Database.AccountModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("License")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<bool>("WhiteListed")
                        .HasColumnType("tinyint(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("License")
                        .IsUnique();

                    b.HasIndex("Id", "License");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("Models.Database.AccountCharacterPositionModel", b =>
                {
                    b.HasOne("Models.Database.AccountCharacterModel", null)
                        .WithOne("Position")
                        .HasForeignKey("Models.Database.AccountCharacterPositionModel", "ChatacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
